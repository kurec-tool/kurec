/*
 * mirakc Web API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0-dev.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebRecord : A record model.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebRecord {
    /// Information about the content.
    #[serde(rename = "content")]
    pub content: Box<models::WebContentInfo>,
    /// The record ID.
    #[serde(rename = "id")]
    pub id: String,
    /// Metadata of the TV program.
    #[serde(rename = "program")]
    pub program: Box<models::MirakurunProgram>,
    /// Information about the recording.
    #[serde(rename = "recording")]
    pub recording: Box<models::WebRecordingInfo>,
    /// Metadata of the service.
    #[serde(rename = "service")]
    pub service: Box<models::MirakurunService>,
    /// A list of tags copied from the recording schedule.
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
}

impl WebRecord {
    /// A record model.
    pub fn new(content: models::WebContentInfo, id: String, program: models::MirakurunProgram, recording: models::WebRecordingInfo, service: models::MirakurunService, tags: Vec<String>) -> WebRecord {
        WebRecord {
            content: Box::new(content),
            id,
            program: Box::new(program),
            recording: Box::new(recording),
            service: Box::new(service),
            tags,
        }
    }
}

