/*
 * mirakc Web API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0-dev.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RecordingFailedReasonOneOf {
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl RecordingFailedReasonOneOf {
    pub fn new(message: String, r#type: Type) -> RecordingFailedReasonOneOf {
        RecordingFailedReasonOneOf {
            message,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "start-recording-failed")]
    StartRecordingFailed,
}

impl Default for Type {
    fn default() -> Type {
        Self::StartRecordingFailed
    }
}

