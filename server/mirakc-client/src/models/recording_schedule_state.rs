/*
 * mirakc Web API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0-dev.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RecordingScheduleState {
    #[serde(rename = "scheduled")]
    Scheduled,
    #[serde(rename = "tracking")]
    Tracking,
    #[serde(rename = "recording")]
    Recording,
    #[serde(rename = "rescheduling")]
    Rescheduling,
    #[serde(rename = "finished")]
    Finished,
    #[serde(rename = "failed")]
    Failed,
}

impl std::fmt::Display for RecordingScheduleState {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Scheduled => write!(f, "scheduled"),
            Self::Tracking => write!(f, "tracking"),
            Self::Recording => write!(f, "recording"),
            Self::Rescheduling => write!(f, "rescheduling"),
            Self::Finished => write!(f, "finished"),
            Self::Failed => write!(f, "failed"),
        }
    }
}

impl Default for RecordingScheduleState {
    fn default() -> RecordingScheduleState {
        Self::Scheduled
    }
}
