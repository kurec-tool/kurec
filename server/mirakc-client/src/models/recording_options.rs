/*
 * mirakc Web API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-dev.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RecordingOptions : Recording options.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RecordingOptions {
    /// The path of the content file relative to `config.recording.basedir`.  The path must be a valid Unicode string.  ### If `config.recording.records-dir` is NOT specified  This is a required option.  A response with the status code 401 will be replied if this option is not specified.  ### If `config.recording.records-dir` is specified  An auto-generated filename will be used for the content file if this option is not specified.
    #[serde(rename = "contentPath", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content_path: Option<Option<String>>,
    /// A list of post-filters to use.
    #[serde(rename = "postFilters", skip_serializing_if = "Option::is_none")]
    pub post_filters: Option<Vec<String>>,
    /// A list of pre-filters to use.
    #[serde(rename = "preFilters", skip_serializing_if = "Option::is_none")]
    pub pre_filters: Option<Vec<String>>,
    /// A priority of tuner usage.
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
}

impl RecordingOptions {
    /// Recording options.
    pub fn new() -> RecordingOptions {
        RecordingOptions {
            content_path: None,
            post_filters: None,
            pre_filters: None,
            priority: None,
        }
    }
}

