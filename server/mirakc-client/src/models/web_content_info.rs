/*
 * mirakc Web API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-dev.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebContentInfo : A content information model.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebContentInfo {
    /// The size of the content.  `null` if there is no content file at the location specified by `content_path` of the recording schedule.  `0` will be set if failed getting the size of the content file even though the file exists.
    #[serde(rename = "length", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub length: Option<Option<i64>>,
    /// The path of the content file relative to `config.recording.basedir`.
    #[serde(rename = "path")]
    pub path: String,
    /// The MIME type of the content.
    #[serde(rename = "type")]
    pub r#type: String,
}

impl WebContentInfo {
    /// A content information model.
    pub fn new(path: String, r#type: String) -> WebContentInfo {
        WebContentInfo {
            length: None,
            path,
            r#type,
        }
    }
}

