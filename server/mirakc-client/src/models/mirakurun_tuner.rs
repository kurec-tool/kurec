/*
 * mirakc Web API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.3.0-dev.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MirakurunTuner {
    /// A command to use getting a media stream from the tuner.
    #[serde(rename = "command", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub command: Option<Option<String>>,
    /// The index of the tuner defined in `config.yml`.
    #[serde(rename = "index")]
    pub index: i32,
    /// Always `true`.
    #[serde(rename = "isAvailable")]
    pub is_available: bool,
    /// Always `false`.
    #[serde(rename = "isFault")]
    pub is_fault: bool,
    /// `true` if the tuner is free, `false` otherwise.
    #[serde(rename = "isFree")]
    pub is_free: bool,
    /// Always `false`.
    #[serde(rename = "isRemote")]
    pub is_remote: bool,
    /// `false` if the tuner is free, `true` otherwise.
    #[serde(rename = "isUsing")]
    pub is_using: bool,
    /// The name of the tuner defined in `config.yml`.
    #[serde(rename = "name")]
    pub name: String,
    /// PID of a process to run the command.
    #[serde(rename = "pid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub pid: Option<Option<i32>>,
    /// Channel types supported by the tuner.
    #[serde(rename = "types")]
    pub types: Vec<models::ChannelType>,
    /// Users of the tuner.
    #[serde(rename = "users")]
    pub users: Vec<models::MirakurunTunerUsersInner>,
}

impl MirakurunTuner {
    pub fn new(index: i32, is_available: bool, is_fault: bool, is_free: bool, is_remote: bool, is_using: bool, name: String, types: Vec<models::ChannelType>, users: Vec<models::MirakurunTunerUsersInner>) -> MirakurunTuner {
        MirakurunTuner {
            command: None,
            index,
            is_available,
            is_fault,
            is_free,
            is_remote,
            is_using,
            name,
            pid: None,
            types,
            users,
        }
    }
}

